// Code generated by MockGen. DO NOT EDIT.
// Source: category_storer.go

// Package mockport is a generated GoMock package.
package mockport

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/muchlist/moneymagnet/business/category/model"
)

// MockCategorySaver is a mock of CategorySaver interface.
type MockCategorySaver struct {
	ctrl     *gomock.Controller
	recorder *MockCategorySaverMockRecorder
}

// MockCategorySaverMockRecorder is the mock recorder for MockCategorySaver.
type MockCategorySaverMockRecorder struct {
	mock *MockCategorySaver
}

// NewMockCategorySaver creates a new mock instance.
func NewMockCategorySaver(ctrl *gomock.Controller) *MockCategorySaver {
	mock := &MockCategorySaver{ctrl: ctrl}
	mock.recorder = &MockCategorySaverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCategorySaver) EXPECT() *MockCategorySaverMockRecorder {
	return m.recorder
}

// InsertMany mocks base method.
func (m *MockCategorySaver) InsertMany(ctx context.Context, categories []model.Category) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertMany", ctx, categories)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertMany indicates an expected call of InsertMany.
func (mr *MockCategorySaverMockRecorder) InsertMany(ctx, categories interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertMany", reflect.TypeOf((*MockCategorySaver)(nil).InsertMany), ctx, categories)
}
